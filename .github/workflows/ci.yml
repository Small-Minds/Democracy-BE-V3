name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  push:
    paths-ignore: [ "docs/**" ]


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy

      - name: Lint with flake8
        run: flake8 .

      - name: Run black formatter
        run: black . --check

      - name: Sort imports
        run: isort . --check-only

      - name: Type checks
        run: mypy democracy


# With no caching at all the entire ci process takes 4m 30s to complete!
  test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: "postgresql://lyWseqTBCwaJmewskVjaSTukcQUkgoFf:W9geotN72lp1rzmWy1y0P0ztPYKMXaaNKkl8oP8DrFoZjwGCgPORBFHjPbetwlpq@postgres/democracy"
      USE_DOCKER: "yes"

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2
      - name: Build the Stack
        run:  docker-compose -f docker-compose.yml build

      - name: Make DB Migrations
        run:  docker-compose -f docker-compose.yml run --rm django python manage.py migrate

      - name: Run the Stack
        run:  docker-compose -f docker-compose.yml up -d

      - name: Run Django Tests
        run:  docker-compose -f docker-compose.yml exec -e DATABASE_URL=${DATABASE_URL} -T django pytest

      - name: Tear down the Stack
        run:  docker-compose -f docker-compose.yml down

  semver:
    runs-on: ubuntu-latest
    needs: [test, lint]
    # Make sure to change this to f*&%*!*^ 'main' if needed.
    if: github.ref == 'refs/heads/master'

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        with:
          ref: "refs/heads/master"
          fetch-depth: 0

      - name: Set up Python 3.8.*
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.*

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python_semantic_release

      - name: Configure Git
        run: |
          git config --global user.name "actions-user"
          git config --global user.email "actions@github.com"

      - name: Semantic Release Publish
        run: |
          semantic-release publish -v DEBUG
